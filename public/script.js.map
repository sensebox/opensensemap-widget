{"version":3,"sources":["app/script.js"],"names":[],"mappingsfile":"public/script.js","sourcesContent":["'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /* global d3, MG*/\n\n\nrequire('core-js/modules/es6.typed.array-buffer');\n\nrequire('core-js/modules/es6.typed.int8-array');\n\nrequire('core-js/modules/es6.typed.uint8-array');\n\nrequire('core-js/modules/es6.typed.uint8-clamped-array');\n\nrequire('core-js/modules/es6.typed.int16-array');\n\nrequire('core-js/modules/es6.typed.uint16-array');\n\nrequire('core-js/modules/es6.typed.int32-array');\n\nrequire('core-js/modules/es6.typed.uint32-array');\n\nrequire('core-js/modules/es6.typed.float32-array');\n\nrequire('core-js/modules/es6.typed.float64-array');\n\nrequire('core-js/modules/es6.map');\n\nrequire('core-js/modules/es6.set');\n\nrequire('core-js/modules/es6.weak-map');\n\nrequire('core-js/modules/es6.weak-set');\n\nrequire('core-js/modules/es6.reflect.apply');\n\nrequire('core-js/modules/es6.reflect.construct');\n\nrequire('core-js/modules/es6.reflect.define-property');\n\nrequire('core-js/modules/es6.reflect.delete-property');\n\nrequire('core-js/modules/es6.reflect.get');\n\nrequire('core-js/modules/es6.reflect.get-own-property-descriptor');\n\nrequire('core-js/modules/es6.reflect.get-prototype-of');\n\nrequire('core-js/modules/es6.reflect.has');\n\nrequire('core-js/modules/es6.reflect.is-extensible');\n\nrequire('core-js/modules/es6.reflect.own-keys');\n\nrequire('core-js/modules/es6.reflect.prevent-extensions');\n\nrequire('core-js/modules/es6.reflect.set');\n\nrequire('core-js/modules/es6.reflect.set-prototype-of');\n\nrequire('core-js/modules/es6.promise');\n\nrequire('core-js/modules/es6.symbol');\n\nrequire('core-js/modules/es6.object.assign');\n\nrequire('core-js/modules/es6.object.is');\n\nrequire('core-js/modules/es6.object.set-prototype-of');\n\nrequire('core-js/modules/es6.function.name');\n\nrequire('core-js/modules/es6.string.raw');\n\nrequire('core-js/modules/es6.string.from-code-point');\n\nrequire('core-js/modules/es6.string.code-point-at');\n\nrequire('core-js/modules/es6.string.repeat');\n\nrequire('core-js/modules/es6.string.starts-with');\n\nrequire('core-js/modules/es6.string.ends-with');\n\nrequire('core-js/modules/es6.string.includes');\n\nrequire('core-js/modules/es6.regexp.flags');\n\nrequire('core-js/modules/es6.regexp.match');\n\nrequire('core-js/modules/es6.regexp.replace');\n\nrequire('core-js/modules/es6.regexp.split');\n\nrequire('core-js/modules/es6.regexp.search');\n\nrequire('core-js/modules/es6.array.from');\n\nrequire('core-js/modules/es6.array.of');\n\nrequire('core-js/modules/es6.array.copy-within');\n\nrequire('core-js/modules/es6.array.find');\n\nrequire('core-js/modules/es6.array.find-index');\n\nrequire('core-js/modules/es6.array.fill');\n\nrequire('core-js/modules/es6.array.iterator');\n\nrequire('core-js/modules/es6.number.is-finite');\n\nrequire('core-js/modules/es6.number.is-integer');\n\nrequire('core-js/modules/es6.number.is-safe-integer');\n\nrequire('core-js/modules/es6.number.is-nan');\n\nrequire('core-js/modules/es6.number.epsilon');\n\nrequire('core-js/modules/es6.number.min-safe-integer');\n\nrequire('core-js/modules/es6.number.max-safe-integer');\n\nrequire('core-js/modules/es6.math.acosh');\n\nrequire('core-js/modules/es6.math.asinh');\n\nrequire('core-js/modules/es6.math.atanh');\n\nrequire('core-js/modules/es6.math.cbrt');\n\nrequire('core-js/modules/es6.math.clz32');\n\nrequire('core-js/modules/es6.math.cosh');\n\nrequire('core-js/modules/es6.math.expm1');\n\nrequire('core-js/modules/es6.math.fround');\n\nrequire('core-js/modules/es6.math.hypot');\n\nrequire('core-js/modules/es6.math.imul');\n\nrequire('core-js/modules/es6.math.log1p');\n\nrequire('core-js/modules/es6.math.log10');\n\nrequire('core-js/modules/es6.math.log2');\n\nrequire('core-js/modules/es6.math.sign');\n\nrequire('core-js/modules/es6.math.sinh');\n\nrequire('core-js/modules/es6.math.tanh');\n\nrequire('core-js/modules/es6.math.trunc');\n\nrequire('core-js/modules/es7.array.includes');\n\nrequire('core-js/modules/es7.object.values');\n\nrequire('core-js/modules/es7.object.entries');\n\nrequire('core-js/modules/es7.object.get-own-property-descriptors');\n\nrequire('core-js/modules/es7.string.pad-start');\n\nrequire('core-js/modules/es7.string.pad-end');\n\nrequire('core-js/modules/web.timers');\n\nrequire('core-js/modules/web.immediate');\n\nrequire('core-js/modules/web.dom.iterable');\n\nrequire('regenerator-runtime/runtime');\n\nrequire('whatwg-fetch');\n\n'use strict';\n\nvar widget = document.querySelector('[data-sensebox-id]');\nvar _widget$dataset = widget.dataset,\n    senseboxId = _widget$dataset.senseboxId,\n    initialTab = _widget$dataset.initialTab;\n\nvar selectedTab = void 0;\n\nvar WIDGET_BASE_URL = 'http://localhost:8000/';\nvar REFRESH_INTERVAL = 150000; // 2.5 minutes\nvar API_BASE_URL = 'https://api.opensensemap.org/boxes/' + senseboxId;\nvar DEPS_BASE_URL = 'https://unpkg.com/';\n\nvar userLang = navigator.language || navigator.userLanguage;\n\nvar currentIntervals = {};\nvar clearCurrentInterval = function clearCurrentInterval(target) {\n  if (currentIntervals[target]) {\n    clearInterval(currentIntervals[target]);\n    currentIntervals[target] = undefined;\n  }\n};\n\nvar startInterval = function startInterval(target, func) {\n  clearCurrentInterval(target);\n  currentIntervals[target] = setInterval(func, REFRESH_INTERVAL);\n};\n\nvar getWidgetHTML = function getWidgetHTML() {\n  return fetch(new Request(WIDGET_BASE_URL + 'widget.html', {\n    method: 'GET',\n    mode: 'cors'\n  })).then(function (res) {\n    return res.text();\n  });\n};\n\nvar initSensorArea = function initSensorArea() {\n  fetchBox().then(function (sensorData) {\n    var sensors = sensorData.sensors;\n    if (document.querySelector('.widget-list[data-tab=\"sensors\"]').innerHTML === '') {\n      createSensorDivs(sensors);\n    }\n  });\n};\n\nvar appendTitle = function appendTitle(title) {\n  var titleArea = document.querySelector('#titlearea');\n  var titleTooltip = document.querySelector('.titletooltip');\n  titleTooltip.innerHTML = title;\n  titleArea.style.fontSize = setTitleFontSize(title);\n  if (title.length > 30) {\n    title = shortenTitle(title);\n  }\n  titleArea.innerHTML = title;\n};\n\nvar setTitleFontSize = function setTitleFontSize(title) {\n  var widgetHeight = document.querySelector('.widget-wrapper').offsetHeight;\n  if (widgetHeight >= 300) {\n    if (title.length > 15) {\n      return '16px';\n    }\n\n    return '25px';\n  }\n  if (title.length > 15) {\n    return '12px';\n  }\n\n  return '15px';\n};\n\nvar shortenTitle = function shortenTitle(title) {\n  return title.substring(0, 27) + '...';\n};\n\nvar appendDescription = function appendDescription(description) {\n  var tooltip = document.querySelector('.tooltip');\n  tooltip.innerHTML = description ? '<p>' + description + '</p>' : '<p>Keine Beschreibung verfügbar.</p>';\n};\n\nvar fetchBox = function fetchBox() {\n  return fetchJSON(API_BASE_URL).then(function (box) {\n    appendTitle(box.name);\n    appendDescription(box.description);\n\n    return box;\n  });\n};\n\nvar fetchJSONCache = Object.create(null);\n\nvar fetchJSON = function fetchJSON(url) {\n  if (fetchJSONCache[url] && fetchJSONCache[url].ts + 10000 > Date.now()) {\n    return Promise.resolve(fetchJSONCache[url].json);\n  }\n\n  return fetch(url).then(function (res) {\n    return res.json();\n  }).then(function (json) {\n    fetchJSONCache[url] = {\n      ts: Date.now(),\n      json: json\n    };\n\n    return json;\n  });\n};\n\nvar createSensorDivs = function createSensorDivs(sensors) {\n  var sensorTab = document.querySelector('.widget-list[data-tab=\"sensors\"]');\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = sensors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var sensor = _step.value;\n\n      var newDiv = document.createElement('div');\n      newDiv.className = 'innerDiv';\n      newDiv.id = 'widget-sensor-' + sensor._id;\n      fillDiv(newDiv, sensor);\n      sensorTab.appendChild(newDiv);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n};\n\nvar fillDiv = function fillDiv(element, data) {\n  if (data.lastMeasurement) {\n    element.innerHTML = '<h3>' + data.title + ': <span>' + formatDates(new Date(data.lastMeasurement.createdAt)) + '</span></h3><p><span class=\"sensorValue\">' + data.lastMeasurement.value + ' ' + data.unit + '</span></p>';\n  } else {\n    element.innerHTML = '<h3>' + data.title + ': </h3><p>Keine Daten verf\\xFCgbar...</p>';\n  }\n};\n\nvar updateSensorValues = function updateSensorValues(sensorData) {\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = sensorData.sensors[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var sensor = _step2.value;\n\n      var requiredID = 'widget-sensor-' + sensor._id;\n      fillDiv(document.getElementById(requiredID), sensor);\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n};\n\n//Der folgende Code wird nur initiiert, wenn der \"History\"-Button im Widget angeklickt wird.\n\nvar initHistoryArea = function initHistoryArea() {\n  fetchBox().then(function (sensorData) {\n    var select = document.getElementById('currentsensorhistory');\n    if (select.innerHTML === '') {\n      var sensors = sensorData.sensors;\n      createAndInsertOptions(sensors, select);\n    }\n    if (document.getElementById('history-entries').innerHTML === '') {\n      //Für den Fall, dass man zum Tab zurückkehrt, nachdem man ihn schon einmal aufgerufen hat\n      insertOldEntries(sensorData);\n    }\n  }).catch(function (err) {\n    console.log(err);\n    document.getElementById('history-entries').innerHTML = 'Es ist ein Fehler aufgetreten: ' + err;\n  });\n};\n\nvar createAndInsertOptions = function createAndInsertOptions(optionArray, select) {\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = optionArray[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var option = _step3.value;\n\n      var newOption = document.createElement('option');\n      var currentOption = option;\n      newOption.value = currentOption._id;\n      newOption.innerHTML = currentOption.title;\n      select.appendChild(newOption);\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n};\n\nvar insertOldEntries = function insertOldEntries(sensorObject) {\n  document.getElementById('history-entries').innerHTML = '';\n  var sensorID = getSelectedValue('currentsensorhistory');\n  var currentSensor = searchSensorinArray(sensorID, sensorObject.sensors);\n\n  return fetchJSON(API_BASE_URL + '/data/' + sensorID).then(function (measurements) {\n    if (measurements.length !== 0) {\n      var i = 4;\n      while (i >= 0) {\n        if (measurements[i]) addHistoryEntry(formatDates(new Date(measurements[i].createdAt)), measurements[i].value, currentSensor.unit);\n        i--;\n      }\n    } else {\n      document.getElementById('history-entries').innerHTML = '<p>Leider gibt es hierfür keine aktuellen Messwerte.</p>';\n    }\n  }).catch(function (err) {\n    console.log(err);\n    document.getElementById('history-entries').innerHTML = '<p>Ein Fehler ist aufgetreten: ' + err + '</p>';\n  });\n};\n\nvar getSelectedValue = function getSelectedValue(elementID) {\n  var select = document.getElementById(elementID);\n\n  return select.options[select.selectedIndex].value;\n};\n\nvar searchSensorinArray = function searchSensorinArray(id, arr) {\n  return arr.find(function (s) {\n    return s._id === id;\n  });\n};\n\nvar addHistoryEntry = function addHistoryEntry(date, value, unit) {\n  var newDiv = document.createElement('div');\n  newDiv.className = 'innerDiv-history';\n  newDiv.innerHTML = '<p><i>' + date + '</i>: <b>' + value + unit + '</b></p>';\n  var historyEntries = document.getElementById('history-entries');\n  historyEntries.insertBefore(newDiv, historyEntries.firstChild);\n};\n\nvar timespanTranslations = {\n  'de-DE': {\n    prefix: 'vor',\n    s: 'Sekunden',\n    min: 'Minuten',\n    h: 'Stunden',\n    d: 'Tagen',\n    m: 'Monaten',\n    y: 'Jahren'\n  },\n  default: {\n    suffix: 'ago',\n    s: 'seconds',\n    min: 'minutes',\n    h: 'hours',\n    d: 'days',\n    m: 'months',\n    y: 'years'\n  }\n};\n\nvar getTimespanTranslation = function getTimespanTranslation(key, timespan) {\n  var strings = timespanTranslations[userLang];\n  if (!strings) {\n    strings = timespanTranslations.default;\n  }\n\n  if (strings.suffix) {\n    return timespan + ' ' + strings[key] + ' ' + strings.suffix;\n  }\n\n  return strings.prefix + ' ' + timespan + ' ' + strings[key];\n};\n\nvar formatDates = function formatDates(date) {\n  var seconds = Math.floor((new Date() - date) / 1000);\n\n  var interval = Math.floor(seconds / 31536000);\n  if (interval > 1) {\n    return getTimespanTranslation('y', interval);\n  }\n\n  interval = Math.floor(seconds / 2592000);\n  if (interval > 1) {\n    return getTimespanTranslation('m', interval);\n  }\n\n  interval = Math.floor(seconds / 86400);\n  if (interval > 1) {\n    return getTimespanTranslation('d', interval);\n  }\n\n  interval = Math.floor(seconds / 3600);\n  if (interval > 1) {\n    return getTimespanTranslation('h', interval);\n  }\n\n  interval = Math.floor(seconds / 60);\n  if (interval > 1) {\n    return getTimespanTranslation('min', interval);\n  }\n\n  return getTimespanTranslation('s', Math.floor(seconds));\n};\n\nvar updateHistory = function updateHistory(sensorData) {\n  var sensorID = getSelectedValue('currentsensorhistory');\n  var currentSensor = searchSensorinArray(sensorID, sensorData.sensors);\n  if (currentSensor.lastMeasurement) {\n    var parsedDate = formatDates(new Date(currentSensor.lastMeasurement.createdAt));\n    var firstChild = document.getElementById('history-entries').firstChild;\n    if (!firstChild || firstChild === null || !firstChild.innerHTML.startsWith('<p><i>' + parsedDate)) {\n      if (firstChild && firstChild !== null && firstChild.innerHTML.startsWith('Leider')) firstChild.innerHTML = '';\n      addHistoryEntry(parsedDate, currentSensor.lastMeasurement.value, currentSensor.unit);\n    }\n  }\n};\n\n//Diese Funktionen werden aufgerufen, wenn der Graphen-Tab angeklickt wird.\n\nvar initGraphArea = function initGraphArea() {\n  Promise.all([fetchBox(), insertStylesheetWithOnloadListener(DEPS_BASE_URL + 'metrics-graphics@2.11.0/dist/metricsgraphics.css'), loadJSsync(['d3@4.9.1', 'metrics-graphics@2.11.0'])]).then(function (results) {\n    var _results = _slicedToArray(results, 1),\n        sensorData = _results[0];\n\n    var select = document.getElementById('currentsensorgraph');\n    if (select.innerHTML === '') {\n      var sensors = sensorData.sensors;\n      createAndInsertOptions(sensors, select);\n    }\n    if (document.getElementById('graph-target').innerHTML === '') {\n      drawGraph(sensorData);\n    }\n  }).catch(function (err) {\n    document.querySelector('#graph-target').innerHTML = 'Ein Fehler ist aufgetreten: ' + err;\n  });\n};\n\nvar drawGraph = function drawGraph(sensorObject) {\n  var graphArea = document.getElementById('graph-target');\n  graphArea.innerHTML = '';\n  var selectedSensor = document.getElementById('currentsensorgraph');\n  var sensorID = selectedSensor.options[selectedSensor.selectedIndex].value;\n  var currentSensor = searchSensorinArray(sensorID, sensorObject.sensors);\n  var url = API_BASE_URL + '/data/' + sensorID;\n  d3.json(url, function (err, data) {\n    if (err || !data || data === null) {\n      document.querySelector('#graph-target').innerHTML = 'Ein Fehler ist aufgetreten: ' + err;\n    }\n    data = reduceAmountOfDrawnData(data);\n    if (data.length !== 0) {\n      data = MG.convert.date(data, 'createdAt', d3.utcParse('%Y-%m-%dT%H:%M:%S.%L%Z'));\n      MG.data_graphic({\n        data: data,\n        full_width: true,\n        full_height: true,\n        right: 40,\n        target: '#graph-target',\n        area: false,\n        backgroundColor: '#8C001A',\n        title: currentSensor.title + ' in ' + currentSensor.unit,\n        xax_count: 3,\n        color: '#4EAF47',\n        x_accessor: 'createdAt',\n        y_accessor: 'value',\n        max_y: setMaxGraphValue(data),\n        min_y: setMinGraphValue(data),\n        mouseover: function mouseover(d) {\n          var formattedDate = formatDates(new Date(d.createdAt));\n          var measurement = formattedDate + ' -> ' + d.value + ' ' + currentSensor.unit;\n          d3.select('#graph-target svg .mg-active-datapoint').text(measurement);\n        }\n      });\n    } else {\n      graphArea.innerHTML = '<p>Leider gibt es hierfür keine aktuellen Messwerte.</p>';\n    }\n  });\n};\n\nvar setMaxGraphValue = function setMaxGraphValue(data) {\n  var maximum = 0;\n  for (var i = 0; i < data.length; i++) {\n    if (parseFloat(data[i].value) > maximum) {\n      maximum = parseFloat(data[i].value);\n    }\n  }\n\n  return maximum > 0 ? maximum * 1.2 : maximum - maximum * 0.2;\n};\n\nvar setMinGraphValue = function setMinGraphValue(data) {\n  var minimum = data[0].value;\n  for (var i = 1; i < data.length; i++) {\n    if (parseFloat(data[i].value) < minimum) {\n      minimum = parseFloat(data[i].value);\n    }\n  }\n\n  return minimum < 0 ? minimum * 1.2 : minimum - minimum * 0.2;\n};\n\nvar adjustMarginTopWithParentHeight = function adjustMarginTopWithParentHeight(parent, child, margin) {\n  var elementHeight = parent.offsetHeight;\n  if (margin.top) child.style.marginTop = margin.top * elementHeight + 'px';\n  if (margin.bottom) child.style.marginBottom = margin.bottom * elementHeight + 'px';\n};\n\nvar adjustPaddingTopWithParentHeight = function adjustPaddingTopWithParentHeight(parent, child, padding) {\n  var elementHeight = parent.offsetHeight;\n  if (padding.top) child.style.paddingTop = padding.top * elementHeight + 'px';\n  if (padding.bottom) child.style.paddingBottom = padding.bottom * elementHeight + 'px';\n};\n\nvar insertStylesheetWithOnloadListener = function insertStylesheetWithOnloadListener(url) {\n  return new Promise(function (resolve) {\n    var style = document.createElement('style');\n    style.textContent = '@import \"' + url + '\"';\n    document.head.appendChild(style);\n    var onload = setInterval(function () {\n      try {\n        style.sheet.cssRules;\n        clearInterval(onload);\n        resolve();\n      } catch (e) {\n        /*eslint-disable no-empty */\n        /*eslint-enable no-empty */\n      }\n    }, 10);\n  });\n};\n\nvar applyStylesToWidgetWithJS = function applyStylesToWidgetWithJS() {\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = document.querySelectorAll('.widget-list[data-tab]')[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var _widget = _step4.value;\n\n      adjustMarginTopWithParentHeight(document.querySelector('.widget'), _widget, {\n        top: 0.12\n      });\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  adjustPaddingTopWithParentHeight(document.querySelector('.widget-header'), document.querySelector('.widget-header img'), {\n    top: 0.1,\n    bottom: 0.1\n  });\n  setFooterLinkHref();\n  setFooterFontSize();\n};\n\nvar loadJSsync = function loadJSsync(urls) {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var currIndex = 0;\n\n  return new Promise(function (resolve) {\n    var next = function next() {\n      var scr = document.createElement('script');\n\n      scr.src = '' + DEPS_BASE_URL + urls[currIndex];\n      scr.async = false;\n      currIndex = currIndex + 1;\n\n      scr.addEventListener('load', function () {\n        if (currIndex !== urls.length) {\n          return next();\n        }\n\n        return resolve();\n      });\n\n      head.insertBefore(scr, head.firstChild);\n    };\n\n    next();\n  });\n};\n\nvar reduceAmountOfDrawnData = function reduceAmountOfDrawnData(data) {\n  if (data.length <= 1000) {\n    return data;\n  }\n\n  var resarr = [];\n  var dataLengthString = String(data.length);\n  var steps = dataLengthString.substring(0, dataLengthString.length - 3) * 2;\n  for (var i = 0; i < data.length; i = i + steps) {\n    resarr.push(data[i]);\n  }\n\n  return resarr;\n};\n\nvar setFooterLinkHref = function setFooterLinkHref() {\n  var footerLink = document.querySelector('.widget-footer').firstElementChild;\n  footerLink.href = 'https://opensensemap.org/explore/' + senseboxId;\n};\n\nvar setFooterFontSize = function setFooterFontSize() {\n  document.querySelector('.widget-footer').style.fontSize = document.querySelector('.widget').offsetHeight >= 400 ? '14px' : '11px';\n};\n\nvar toggleTab = function toggleTab(_ref) {\n  var target = _ref.target;\n  var tabId = target.dataset.tabId;\n\n  var tab = document.querySelector('.widget-list[data-tab=\"' + tabId + '\"]');\n\n  var _iteratorNormalCompletion5 = true;\n  var _didIteratorError5 = false;\n  var _iteratorError5 = undefined;\n\n  try {\n    for (var _iterator5 = document.querySelectorAll('.selected-tab')[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n      var elem = _step5.value;\n\n      elem.classList.remove('selected-tab');\n    }\n  } catch (err) {\n    _didIteratorError5 = true;\n    _iteratorError5 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion5 && _iterator5.return) {\n        _iterator5.return();\n      }\n    } finally {\n      if (_didIteratorError5) {\n        throw _iteratorError5;\n      }\n    }\n  }\n\n  tab.classList.add('selected-tab');\n  target.classList.add('selected-tab');\n  selectedTab = tabId;\n\n  switch (tabId) {\n    case 'graph':\n      initGraphArea();\n      break;\n    case 'history':\n      initHistoryArea();\n      break;\n    case 'sensors':\n      initSensorArea();\n      break;\n    default:\n      initSensorArea();\n  }\n};\n\nvar initTabs = function initTabs() {\n  var tabs = document.querySelectorAll('.widget-tab');\n  var _iteratorNormalCompletion6 = true;\n  var _didIteratorError6 = false;\n  var _iteratorError6 = undefined;\n\n  try {\n    for (var _iterator6 = tabs[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n      var tab = _step6.value;\n\n      tab.addEventListener('click', toggleTab);\n    }\n  } catch (err) {\n    _didIteratorError6 = true;\n    _iteratorError6 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion6 && _iterator6.return) {\n        _iterator6.return();\n      }\n    } finally {\n      if (_didIteratorError6) {\n        throw _iteratorError6;\n      }\n    }\n  }\n};\n\nvar changeSensorHistory = function changeSensorHistory() {\n  fetchBox().then(insertOldEntries).then(checkForNewMeasurements);\n};\n\nvar changeSensorGraph = function changeSensorGraph() {\n  fetchBox().then(drawGraph);\n};\n\nvar initSelectChangeListener = function initSelectChangeListener() {\n  document.getElementById('currentsensorhistory').addEventListener('change', changeSensorHistory);\n  document.getElementById('currentsensorgraph').addEventListener('change', changeSensorGraph);\n};\n\nPromise.all([getWidgetHTML(), insertStylesheetWithOnloadListener(WIDGET_BASE_URL + 'style.css')]).then(function (results) {\n  var _results2 = _slicedToArray(results, 1),\n      content = _results2[0];\n\n  widget.innerHTML = content;\n\n  applyStylesToWidgetWithJS();\n  initTabs();\n  initSelectChangeListener();\n  toggleTab({\n    target: document.querySelector('[data-tab-id=' + (initialTab || 'sensors') + ']')\n  });\n\n  startInterval('datarefresh', function () {\n    fetchBox().then(function (box) {\n      if (selectedTab === 'history') updateHistory(box);else if (selectedTab === 'sensors') updateSensorValues(box);\n    });\n  });\n}).catch(function (err) {\n  console.log(err);\n  document.querySelector('.widget').innerHTML = 'Es ist ein Fehler aufgetreten: ' + err;\n});\n"]}